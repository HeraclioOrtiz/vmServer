<?php
// app/Services/SociosApi.php
namespace App\Services;

use Illuminate\Support\Facades\Http;

class SociosApi
{
    protected string $base;
    protected string $login;
    protected string $token;
    protected string $imgBase;
    protected int $timeout;
    protected bool $verify;

    public function __construct()
    {
        $cfg = config('services.socios');

        $this->base    = rtrim($cfg['base'] ?? '', '/');
        $this->login   = $cfg['login'] ?? '';
        $this->token   = $cfg['token'] ?? '';
        $this->imgBase = rtrim($cfg['img_base'] ?? '', '/');
        $this->timeout = (int)($cfg['timeout'] ?? 15);
        $this->verify  = (bool)($cfg['verify'] ?? true);
    }

    /**
     * Devuelve array de datos del socio o null si no existe / error.
     */
    public function getSocioPorDni(string $dni): ?array
    {
        if ($this->base === '') return null;

        $resp = Http::withOptions([
                'timeout' => $this->timeout,
                'verify'  => $this->verify,
            ])
            ->asForm()
            ->withHeaders([
                'Authorization' => $this->token,
                'Login'         => $this->login,
            ])
            ->post("{$this->base}/get_socio/", ['dni' => $dni]);

        if (!$resp->ok()) {
            // PodÃ©s loguear $resp->status() / $resp->body()
            return null;
        }

        $json = $resp->json();

        // La API devuelve "msg":"Proceso OK" cuando encuentra socio
        if (!empty($json['result']) && ($json['msg'] ?? '') === 'Proceso OK') {
            return $json['result'];
        }

        return null;
    }

    /**
     * Descarga la foto del socio en binario o null si no existe.
     */
    public function fetchFotoSocio(string $socioId): ?string
    {
        if ($this->imgBase === '' || $socioId === '') return null;

        $url  = "{$this->imgBase}/{$socioId}.jpg";
        $resp = Http::withOptions([
                'timeout' => $this->timeout,
                'verify'  => $this->verify,
            ])->get($url);

        if ($resp->ok() && str_starts_with($resp->header('Content-Type', ''), 'image/')) {
            return $resp->body();
        }
        return null;
    }
}
